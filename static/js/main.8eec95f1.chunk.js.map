{"version":3,"sources":["store/action.js","components/AboutMe.jsx","components/WorkExprience.jsx","components/Skills.jsx","components/Education.jsx","components/Organization.jsx","App.js","AppContainer.js","store/reducers.js","store/store.js","serviceWorker.js","index.js"],"names":["getResume","type","data","userInfo","concat","contactClass","contactInfoClass","AboutMe","_ref","contact","name","title","objective","primaryEmail","primaryNumber","skypeId","linkedinProfile","address","react_default","a","createElement","className","href","target","Projects","project","nodeClass","description","roleList","roles","map","role","idx","key","Fragment","Exprience","_ref2","exprience","organization","projectList","projects","WorkExprience_Projects","WorkExprience","_ref3","exprienceList","workExprience","WorkExprience_Exprience","Skills","skillElem","skills","skill","precent","Number","rating","aria-valuenow","aria-valuemin","aria-valuemax","style","width","contentClass","contentList","Education","educationList","education","edu","college","course","place","university","_edu$duration","duration","from","to","OrganizationListItem","_organization$duratio","isCurrent","month","year","Organization","organizationList","organizations","Organization_OrganizationListItem","App","this","props","_this$props$resume","resume","isLoaded","src_components_AboutMe","data-role","src_components_WorkExprience","src_components_Skills","src_components_Organization","src_components_Education","PureComponent","connect","state","dispatch","bindActionCreators","initialState","resumeReducer","arguments","length","undefined","action","Object","assign","objectSpread","createStore","Boolean","window","location","hostname","match","rootElement","document","getElementById","hasChildNodes","hydrate","es","store","AppContainer","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8eec95f1.chunk.js","sourcesContent":["import data from './../data/resume.json';\nconst GET_RESUME = 'GET_RESUME';\n\nconst getResume = () => ({\n\ttype: GET_RESUME,\n\tdata,\n});\n\nexport {\n\tgetResume,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AboutMe.scss';\n\nconst rootClass = 'about-me';\nconst userInfo = `${rootClass}__user-info`;\nconst contactClass= `${rootClass}__contact`;\nconst contactInfoClass = `${contactClass}__info`;\n\nconst AboutMe = ({contact, name, title, objective}) => {\n\tconst { primaryEmail, primaryNumber, skypeId, linkedinProfile, address } = contact;\n\treturn (\n\t\t<div className={rootClass}>\n\t\t\t<div className={userInfo}>\n\t\t\t\t<h2 className={`${userInfo}__name`}>\n\t\t\t\t\t{name}\n\t\t\t\t</h2>\n\t\t\t\t<h3 className={`${userInfo}__role`}>\n\t\t\t\t\t{title}\n\t\t\t\t</h3>\n\t\t\t\t<p className={`${userInfo}__objective`}>\n\t\t\t\t\t{objective}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className={`${rootClass}__avatar`}>\n\n\t\t\t</div>\n\t\t\t<div className={contactClass}>\n\t\t\t\t{primaryEmail && <div className={`${contactInfoClass} ${contactInfoClass}--email`}>{primaryEmail} </div>}\n\t\t\t\t<div className={`${contactInfoClass} ${contactInfoClass}--mobile`}>{primaryNumber} </div>\n\t\t\t\t{linkedinProfile && <div className={`${contactInfoClass} ${contactInfoClass}--linkedin`}><a href={linkedinProfile} target=\"_blank\">{linkedinProfile}</a></div>}\n\t\t\t\t<div className={`${contactInfoClass} ${contactInfoClass}--address`}>{address} </div>\n\t\t\t\t<div className={`${contactInfoClass} ${contactInfoClass}--skype`}>{skypeId} </div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nAboutMe.propTypes = {\n\tcontact: PropTypes.object,\n\tname: PropTypes.string,\n\ttitle: PropTypes.string,\n\tobjective: PropTypes.string,\n};\n\nexport default AboutMe;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './WorkExprience.scss';\n\nconst rootClass = 'work-exprience';\n\nconst Projects = ({ project }) => {\n\tconst nodeClass = `${rootClass}__section__exp`;\n\tconst { name, description, roles }= project;\n\tconst roleList = roles.map((role, idx) => <li key={idx}>{role}</li>)\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className={`${nodeClass}__project`}><strong>Project: </strong>{name}</div>\n\t\t\t\t<div className={`${nodeClass}__description`}>\n\t\t\t\t\t{description}\n\t\t\t\t</div>\n\t\t\t\t<div className={`${nodeClass}__responsibility`}>\n\t\t\t\t\t<div className={`${nodeClass}__responsibility__label`}>Responsility</div>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{roleList}\n\t\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t)\n}\n\nexport const Exprience = ({ exprience }) => {\n\tconst nodeClass = `${rootClass}__section__exp`;\n\tconst { title, organization, projects } = exprience;\n\tconst projectList = projects.map((project, idx) => <Projects project={project} key={idx} />);\n\treturn (\n\t\t<div className={nodeClass}>\n\t\t\t<div className={`${nodeClass}__role`}>{title} <span className=\"badge\">{organization}</span></div>\n\t\t\t{projectList}\n\t\t</div>\n\t)\n}\n\nconst WorkExprience = ({ workExprience }) => {\n\tconst exprienceList = workExprience.map((exprience, idx)=> <Exprience exprience={exprience} key={idx} />)\n\n\treturn (\n\t\t<div className={rootClass}>\n\t\t\t<h2 className={`${rootClass}__title`}>\n\t\t\t\tWork Exprience\n\t\t\t</h2>\n\t\t\t<div className={`${rootClass}__section`}>\n\t\t\t\t{exprienceList}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nWorkExprience.propTypes = {\n\tworkExprience: PropTypes.array,\n};\n\nexport default WorkExprience;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Skills.scss';\n\nconst rootClass = 'skills';\n\nconst Skills = ({ skills }) => {\n\tconst skillElem = skills.map(((skill, idx) => {\n\t\tconst precent = Number(skill.rating) * 10;\n\t\treturn (\n\t\t\t<div className={`${rootClass}__info`} key={idx}>\n\t\t\t\t<div className={`${rootClass}__info__text`}>{skill.name}</div>\n\t\t\t\t<div className={`${rootClass}__info__rating`}>\n\t\t\t\t\t<div className=\"progress\">\n\t\t\t\t\t\t<div className=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: `${precent}%`}}>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}));\n\n\treturn (\n\t\t<div className={rootClass}>\n\t\t\t<h3 className={`${rootClass}__title`}>\n\t\t\t\tSkills\n\t\t\t</h3>\n\t\t\t<div className={`${rootClass}__desc`}>\n\t\t\t\t{skillElem}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nSkills.propTypes = {\n\tskills: PropTypes.array,\n};\n\nexport default Skills;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Education.scss';\n\nconst rootClass = 'education';\nconst contentClass= `${rootClass}__content`;\nconst contentList = `${contentClass}__list`;\n\n\n\nconst Education = ({ education }) => {\n\tconst educationList = education.map((edu, idx) => {\n\t\tconst { college, course, place, university, duration: { from, to } } = edu;\n\t\treturn (\n\t\t\t<div className={contentList}>\n\t\t\t\t<div className={`${contentList}__college`}>{college},\n\t\t\t\t\t{place && <span className={`${contentList}__college__place`}>{place}</span>}\n\t\t\t\t</div>\n\t\t\t\t<div className={`${contentList}__course`}>{university} </div>\n\t\t\t\t<div className={`${contentList}__course`}>{course} </div>\n\t\t\t\t<div className={`${contentList}__year`}>{from}-{to}</div>\n\t\t\t</div>\n\t\t)\n\t});\n\treturn (\n\t\t<div className={rootClass}>\n\t\t\t<h3 className={`${rootClass}__title`}>Education</h3>\n\t\t\t<div className={contentClass}>\n\t\t\t\t{educationList}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nEducation.propTypes = {\n\teducation: PropTypes.array,\n};\n\nexport default Education;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Organization.scss';\n\nconst rootClass = 'organization';\nconst contentClass= `${rootClass}__content`;\nconst contentList = `${contentClass}__list`\n\nconst OrganizationListItem = ({ organization }) => {\n\tconst { name, title, duration: { from, to }, isCurrent } = organization;\n\treturn (\n\t\t<div className={contentList}>\n\t\t\t<div className={`${contentList}__name`}>{name}</div>\n\t\t\t<div className={`${contentList}__role`}>{title}</div>\n\t\t\t<div className={`${contentList}__duration`}>\n\t\t\t\t{`${from.month} ${from.year} - ${isCurrent ? 'till now': `${to.month} ${to.year}`}`}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\n\nconst Organization = ({ organizations }) => {\n\tconst organizationList = organizations.map((organization, idx) => \n\t\t<OrganizationListItem organization={organization} key={idx} />\n\t);\n\n\treturn (\n\t\t<div className={rootClass}>\n\t\t\t<h3 className={`${rootClass}__title`}>\n\t\t\t\tOrganization\n\t\t\t</h3>\n\t\t\t<div className={contentClass}>\n\t\t\t\t{organizationList}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nOrganization.propTypes = {\n\torganizations: PropTypes.array,\n};\n\nexport default Organization;","import React, { PureComponent } from 'react';\nimport AboutMe from './components/AboutMe.jsx';\nimport WorkExprience from './components/WorkExprience.jsx';\nimport Skills from './components/Skills.jsx';\nimport Education from './components/Education.jsx';\nimport Organization from './components/Organization.jsx';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.scss';\nconst rootClass = 'app';\nclass App extends PureComponent {\n  componentDidMount() {\n    this.props.getResume();\n  }\n  render() {\n    const { contact, name, objective, title, workExprience,  education, skills, organizations , isLoaded} = this.props.resume;\n    if(!isLoaded) {\n      return null;\n    }\n    return (\n      <div className={`container ${rootClass}`}>\n        <section className={`${rootClass}__about-me`}>\n          <AboutMe contact={contact} name={name} objective={objective} title={title} />\n        </section>\n        <div className={`${rootClass}__section`}>\n            <section className={`${rootClass}__section__exprience`}>\n              <section data-role=\"WorkExprience\">\n                <WorkExprience workExprience={workExprience} />\n              </section>\n            </section>\n            <div className={`${rootClass}__section__skills`}>\n              <section data-role=\"skills\">\n                <Skills skills={skills} />\n              </section>\n              <section data-role=\"organization\">\n                <Organization organizations={organizations} />\n              </section>\n              \n              <section data-role=\"education\">\n                  <Education education={education} />\n                </section>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getResume } from './store/action.js';\nimport App from './App.js';\n\nfunction mapPropsToState(state){\n\treturn {\n\t\tresume: state,\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tgetResume: bindActionCreators(getResume, dispatch),\n\t}\n}\n\nexport default connect(mapPropsToState, mapDispatchToProps)(App);\n","const initialState = {\n\tisLoaded: false,\n};\nconst resumeReducer = (state = initialState, action) => {\n\tswitch(action.type) {\n\t\tcase 'GET_RESUME':\n\t\t\treturn Object.assign({}, {...state, isLoaded: true}, action.data);\n\t\tdefault:\n\t\t\treturn state;\n\t};\n};\n\nexport default resumeReducer;","import { createStore } from 'redux';\nimport resumeReducer from './reducers.js';\n\nexport default createStore(resumeReducer);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport AppContainer from './AppContainer.js';\nimport store from './store/store.js';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst rootElement = document.getElementById('root');\n\t\nif (rootElement.hasChildNodes()) {\n\thydrate(\n\t\t<Provider store={store}>\n\t\t\t<AppContainer />\n\t\t</Provider>, \n\trootElement);\n} else {\n\trender(\n\t\t<Provider store={store}>\n\t\t\t<AppContainer />\n\t\t</Provider>, rootElement);\n}\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}